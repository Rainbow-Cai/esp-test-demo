[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.1\esp-idf\examples\peripherals\adc\S3-ADC2-oneshot_read\build\bootloader\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/examples/peripherals/adc/S3-ADC2-oneshot_read/build/bootloader/bootloader.bin"
Bootloader binary size 0x51f0 bytes. 0x2e10 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/oneshot_read_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable oneshot_read.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/examples/peripherals/adc/S3-ADC2-oneshot_read/build/oneshot_read.bin
[7/8] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.1\esp-idf\examples\peripherals\adc\S3-ADC2-oneshot_read\build\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/examples/peripherals/adc/S3-ADC2-oneshot_read/build/partition_table/partition-table.bin E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/examples/peripherals/adc/S3-ADC2-oneshot_read/build/oneshot_read.bin"
oneshot_read.bin binary size 0x34920 bytes. Smallest app partition is 0x100000 bytes. 0xcb6e0 bytes (79%) free.
[7/8] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.1\esp-idf\components\esptool_py && E:\esp\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf -D SERIAL_TOOL=E:/esp/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/examples/peripherals/adc/S3-ADC2-oneshot_read/build -P E:/esp/Espressif/frameworks/esp-idf-v5.1/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32s3 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 oneshot_read.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM4
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_1v8)
Crystal is 40MHz
MAC: 68:b6:b3:3f:04:e4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00044fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20976 bytes to 13319...
Writing at 0x00000000... (100 %)
Wrote 20976 bytes (13319 compressed) at 0x00000000 in 0.6 seconds (effective 293.1 kbit/s)...
Hash of data verified.
Compressed 215328 bytes to 116450...
Writing at 0x00010000... (12 %)
Writing at 0x0001d039... (25 %)
Writing at 0x000230f5... (37 %)
Writing at 0x00029792... (50 %)
Writing at 0x0002f5e8... (62 %)
Writing at 0x00037fc8... (75 %)
Writing at 0x0003db91... (87 %)
Writing at 0x00043ccb... (100 %)
Wrote 215328 bytes (116450 compressed) at 0x00010000 in 3.4 seconds (effective 513.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 519.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
