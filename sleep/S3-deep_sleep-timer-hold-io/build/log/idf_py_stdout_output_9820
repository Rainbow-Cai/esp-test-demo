[1/11] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[2/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.0\examples\system\deep_sleep\build\bootloader\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/bootloader/bootloader.bin"
Bootloader binary size 0x5350 bytes. 0x2cb0 bytes (35%) free.
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/deep_sleep_example_main.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/deep_sleep.elf.dir/project_elf_src_esp32s3.c.obj
[7/9] Linking CXX executable deep_sleep.elf
[8/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32s3 image...
Merged 3 ELF sections
Successfully created esp32s3 image.
Generated E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/deep_sleep.bin
[9/9] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.0\examples\system\deep_sleep\build\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/partition_table/partition-table.bin E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/deep_sleep.bin"
deep_sleep.bin binary size 0x348a0 bytes. Smallest app partition is 0x100000 bytes. 0xcb760 bytes (79%) free.
