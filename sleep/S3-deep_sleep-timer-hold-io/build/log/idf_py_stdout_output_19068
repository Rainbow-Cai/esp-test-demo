[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.0\examples\system\deep_sleep\build\bootloader\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/bootloader/bootloader.bin"
Bootloader binary size 0x5350 bytes. 0x2cb0 bytes (35%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/deep_sleep_example_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable deep_sleep.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32s3 image...
Merged 3 ELF sections
Successfully created esp32s3 image.
Generated E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/deep_sleep.bin
[7/8] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.0\examples\system\deep_sleep\build\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/partition_table/partition-table.bin E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build/deep_sleep.bin"
deep_sleep.bin binary size 0x346c0 bytes. Smallest app partition is 0x100000 bytes. 0xcb940 bytes (80%) free.
[7/8] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && E:\esp\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=E:/esp/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=E:/esp/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;E:/esp/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/esp/Espressif/frameworks/esp-idf-v5.0/examples/system/deep_sleep/build -P E:/esp/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32s3 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 deep_sleep.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM4
Connecting....
Chip is ESP32-S3 (revision v0.1)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 34:85:18:91:a6:ac
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00044fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21328 bytes to 13564...
Writing at 0x00000000... (100 %)
Wrote 21328 bytes (13564 compressed) at 0x00000000 in 0.6 seconds (effective 286.8 kbit/s)...
Hash of data verified.
Compressed 214720 bytes to 111569...
Writing at 0x00010000... (14 %)
Writing at 0x0001c55f... (28 %)
Writing at 0x0002200c... (42 %)
Writing at 0x000282f5... (57 %)
Writing at 0x0002ed7e... (71 %)
Writing at 0x000383e7... (85 %)
Writing at 0x0003f4d3... (100 %)
Wrote 214720 bytes (111569 compressed) at 0x00010000 in 2.7 seconds (effective 635.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 463.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
