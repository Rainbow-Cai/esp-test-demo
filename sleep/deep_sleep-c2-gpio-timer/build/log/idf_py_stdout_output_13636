[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-master\esp-idf\examples\system\deep_sleep\build\bootloader\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/examples/system/deep_sleep/build/bootloader/bootloader.bin"
Bootloader binary size 0x4910 bytes. 0x36f0 bytes (43%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/deep_sleep_example_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable deep_sleep.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32c2 image...
Merged 1 ELF section
Successfully created esp32c2 image.
Generated E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/examples/system/deep_sleep/build/deep_sleep.bin
[7/8] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-master\esp-idf\examples\system\deep_sleep\build\esp-idf\esptool_py && E:\esp\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/examples/system/deep_sleep/build/partition_table/partition-table.bin E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/examples/system/deep_sleep/build/deep_sleep.bin"
deep_sleep.bin binary size 0x1d900 bytes. Smallest app partition is 0x100000 bytes. 0xe2700 bytes (88%) free.
[7/8] cmd.exe /C "cd /D E:\esp\Espressif\frameworks\esp-idf-master\esp-idf\components\esptool_py && E:\esp\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=E:/esp/Espressif/frameworks/esp-idf-master/esp-idf -D SERIAL_TOOL=E:/esp/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c2 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/examples/system/deep_sleep/build -P E:/esp/Espressif/frameworks/esp-idf-master/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32c2 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 30m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 deep_sleep.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM4
Connecting....
Chip is ESP32-C2 (revision v1.0)
Features: WiFi, BLE
Crystal is 26MHz
MAC: 80:64:6f:43:30:b4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00004fff...
Flash will be erased from 0x00010000 to 0x0002dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 18704 bytes to 11389...
Writing at 0x00000000... (100 %)
Wrote 18704 bytes (11389 compressed) at 0x00000000 in 0.6 seconds (effective 243.7 kbit/s)...
Hash of data verified.
Compressed 121088 bytes to 62528...
Writing at 0x00010000... (25 %)
Writing at 0x00019b1b... (50 %)
Writing at 0x00021280... (75 %)
Writing at 0x00027c34... (100 %)
Wrote 121088 bytes (62528 compressed) at 0x00010000 in 2.3 seconds (effective 429.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 348.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
